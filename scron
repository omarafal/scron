#!/bin/bash

# help menu
print_help() {
	echo "Correct usage:"
	echo -e "scron [OPTION]\n"
	echo "Options:"
	echo -e "  -h\tdisplay help menu"
	echo -e "  -f\tspecify commands file"
	echo -e "  -p\tpurge; empty ALL scheduled commands"
	echo -e "  -l\tlist scheduled commands"
	echo -e "  -t\tset time for scheduled commands"
	echo -e "  -c\tschedule a single command"
	echo -e "  -r\trestore the crontab file to the last state it was in"
	echo -e "  -e\tevery; run command(s) every provided time"
	exit
	#echo "\n"
	#echo "Example time formats:"
	#echo "23 Jan @ 8:30 PM -> runs every 23rd of January on 8:30 pm."
	#echo "23 @ 8:30 PM -> runs every 23rd of every month on 8:30 pm."  
	#echo "Sat Jan @ 8:30 PM -> runs every Saturday of every month on 8:30 pm."
	#echo "Sat @ 8:30 PM -> runs every Saturday of every month on 8:30 pm."
      	#please refer to the man page or documentation
	# scron is not responsible for command syntax or date correctness (eg: 31 Sep which doesn't exist)
	# echo "Sat @ every-day also every-boot, every-minute, every-hour"
	# echo "Jun @ time" means every day for the month of Jun	
}

# handle commands file
set_cmds(){
	#cat $1
	#file_content=$(cat $1)
	#echo $file_content
	if [ -f $1 ]
	then
		#echo "File exists."
		#cat $1 | python3 $(dirname $0)/parse_content.py
		# send file name and time to python
		python3 $(dirname $0)/parse_content.py $1 "$2"
	else
		echo "[ERROR] No such file found."
		exit
	fi

}

# variables
time=null
file=null


# options
while getopts ":hf:plt:" opt
do
	case $opt in
		h) print_help;;
		f) file=$OPTARG;;
		p) crontab -r;;
		l) cat $(dirname $0)/current_cmds.scron;;
		t) time=$OPTARG;;
		:) echo "[ERROR] scron -$OPTARG requires argument(s)" && exit;;
		\?) echo -e "[ERROR] Invalid option\n" && print_help && exit;;
		*) echo "Error"
	esac
done

# check variables are set
if [[ $file == null || $time == null ]]
then
	echo "[ERROR] Missing file or time arguments."
	echo "Example usage: scron -t \"23 Jan @ 8:30 AM\" -f file.txt "
	exit
fi

set_cmds $file "$time"
